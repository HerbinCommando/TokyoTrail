// Generated by Haxe 3.4.2
#include <hxcpp.h>

#ifndef INCLUDED_com_gamejam_character_CharacterStat
#include <com/gamejam/character/CharacterStat.h>
#endif
#ifndef INCLUDED_com_gamejam_character_StatBar
#include <com/gamejam/character/StatBar.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObject
#include <openfl/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObjectContainer
#include <openfl/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_display_InteractiveObject
#include <openfl/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_text_TextField
#include <openfl/text/TextField.h>
#endif
#ifndef INCLUDED_openfl_text_TextFormat
#include <openfl/text/TextFormat.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_25e23d8275900a01_18_new,"com.gamejam.character.CharacterStat","new",0x6a0e3673,"com.gamejam.character.CharacterStat.new","com/gamejam/character/CharacterStat.hx",18,0x31f98de0)
HX_LOCAL_STACK_FRAME(_hx_pos_25e23d8275900a01_50_updateStat,"com.gamejam.character.CharacterStat","updateStat",0xfecda0ca,"com.gamejam.character.CharacterStat.updateStat","com/gamejam/character/CharacterStat.hx",50,0x31f98de0)
namespace com{
namespace gamejam{
namespace character{

void CharacterStat_obj::__construct(::String name,Float initialValue,Float rateOfChangeOverTime){
            	HX_GC_STACKFRAME(&_hx_pos_25e23d8275900a01_18_new)
HXLINE(  20)		super::__construct();
HXLINE(  22)		this->statName = name;
HXLINE(  23)		this->statValue = initialValue;
HXLINE(  24)		this->deltaOverTime = rateOfChangeOverTime;
HXLINE(  26)		 ::openfl::text::TextFormat format =  ::openfl::text::TextFormat_obj::__alloc( HX_CTX ,null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null());
HXLINE(  27)		format->color = (int)8421504;
HXLINE(  28)		format->size = (int)24;
HXLINE(  30)		this->statNameText =  ::openfl::text::TextField_obj::__alloc( HX_CTX );
HXLINE(  31)		this->statNameText->setTextFormat(format,null(),null());
HXLINE(  32)		this->statNameText->set_text(name);
HXLINE(  33)		this->addChild(this->statNameText);
HXLINE(  35)		format =  ::openfl::text::TextFormat_obj::__alloc( HX_CTX ,null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null());
HXLINE(  36)		format->color = (int)8421504;
HXLINE(  37)		format->size = (int)18;
HXLINE(  39)		this->statValueText =  ::openfl::text::TextField_obj::__alloc( HX_CTX );
HXLINE(  40)		this->statValueText->setTextFormat(format,null(),null());
HXLINE(  41)		this->statValueText->set_text(name);
HXLINE(  42)		this->addChild(this->statValueText);
HXLINE(  44)		this->statBar =  ::com::gamejam::character::StatBar_obj::__alloc( HX_CTX );
HXLINE(  45)		this->addChild(this->statBar);
            	}

Dynamic CharacterStat_obj::__CreateEmpty() { return new CharacterStat_obj; }

void *CharacterStat_obj::_hx_vtable = 0;

Dynamic CharacterStat_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< CharacterStat_obj > _hx_result = new CharacterStat_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2]);
	return _hx_result;
}

bool CharacterStat_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x19c29573) {
		if (inClassId<=(int)0x17120186) {
			if (inClassId<=(int)0x0ddfced7) {
				return inClassId==(int)0x00000001 || inClassId==(int)0x0ddfced7;
			} else {
				return inClassId==(int)0x17120186;
			}
		} else {
			return inClassId==(int)0x19c29573;
		}
	} else {
		if (inClassId<=(int)0x1b123bf8) {
			return inClassId==(int)0x1af01637 || inClassId==(int)0x1b123bf8;
		} else {
			return inClassId==(int)0x3f2b00af;
		}
	}
}

void CharacterStat_obj::updateStat(Float dT){
            	HX_STACKFRAME(&_hx_pos_25e23d8275900a01_50_updateStat)
HXDLIN(  50)		Float _hx_tmp = this->statValue;
HXDLIN(  50)		this->statValue = (_hx_tmp + (dT * this->deltaOverTime));
            	}


HX_DEFINE_DYNAMIC_FUNC1(CharacterStat_obj,updateStat,(void))


hx::ObjectPtr< CharacterStat_obj > CharacterStat_obj::__new(::String name,Float initialValue,Float rateOfChangeOverTime) {
	hx::ObjectPtr< CharacterStat_obj > __this = new CharacterStat_obj();
	__this->__construct(name,initialValue,rateOfChangeOverTime);
	return __this;
}

hx::ObjectPtr< CharacterStat_obj > CharacterStat_obj::__alloc(hx::Ctx *_hx_ctx,::String name,Float initialValue,Float rateOfChangeOverTime) {
	CharacterStat_obj *__this = (CharacterStat_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(CharacterStat_obj), true, "com.gamejam.character.CharacterStat"));
	*(void **)__this = CharacterStat_obj::_hx_vtable;
	__this->__construct(name,initialValue,rateOfChangeOverTime);
	return __this;
}

CharacterStat_obj::CharacterStat_obj()
{
}

void CharacterStat_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(CharacterStat);
	HX_MARK_MEMBER_NAME(statName,"statName");
	HX_MARK_MEMBER_NAME(statValue,"statValue");
	HX_MARK_MEMBER_NAME(deltaOverTime,"deltaOverTime");
	HX_MARK_MEMBER_NAME(statBar,"statBar");
	HX_MARK_MEMBER_NAME(statNameText,"statNameText");
	HX_MARK_MEMBER_NAME(statValueText,"statValueText");
	 ::openfl::display::Sprite_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void CharacterStat_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(statName,"statName");
	HX_VISIT_MEMBER_NAME(statValue,"statValue");
	HX_VISIT_MEMBER_NAME(deltaOverTime,"deltaOverTime");
	HX_VISIT_MEMBER_NAME(statBar,"statBar");
	HX_VISIT_MEMBER_NAME(statNameText,"statNameText");
	HX_VISIT_MEMBER_NAME(statValueText,"statValueText");
	 ::openfl::display::Sprite_obj::__Visit(HX_VISIT_ARG);
}

hx::Val CharacterStat_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"statBar") ) { return hx::Val( statBar ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"statName") ) { return hx::Val( statName ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"statValue") ) { return hx::Val( statValue ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"updateStat") ) { return hx::Val( updateStat_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"statNameText") ) { return hx::Val( statNameText ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"deltaOverTime") ) { return hx::Val( deltaOverTime ); }
		if (HX_FIELD_EQ(inName,"statValueText") ) { return hx::Val( statValueText ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val CharacterStat_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"statBar") ) { statBar=inValue.Cast<  ::com::gamejam::character::StatBar >(); return inValue; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"statName") ) { statName=inValue.Cast< ::String >(); return inValue; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"statValue") ) { statValue=inValue.Cast< Float >(); return inValue; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"statNameText") ) { statNameText=inValue.Cast<  ::openfl::text::TextField >(); return inValue; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"deltaOverTime") ) { deltaOverTime=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"statValueText") ) { statValueText=inValue.Cast<  ::openfl::text::TextField >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void CharacterStat_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("statName","\x3f","\xfc","\x54","\x50"));
	outFields->push(HX_HCSTRING("statValue","\xfd","\xaa","\x3b","\x95"));
	outFields->push(HX_HCSTRING("deltaOverTime","\x99","\x1f","\xc9","\xab"));
	outFields->push(HX_HCSTRING("statBar","\x5f","\xa2","\x47","\x36"));
	outFields->push(HX_HCSTRING("statNameText","\x8c","\x80","\x94","\x82"));
	outFields->push(HX_HCSTRING("statValueText","\x4a","\x66","\x8c","\x51"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo CharacterStat_obj_sMemberStorageInfo[] = {
	{hx::fsString,(int)offsetof(CharacterStat_obj,statName),HX_HCSTRING("statName","\x3f","\xfc","\x54","\x50")},
	{hx::fsFloat,(int)offsetof(CharacterStat_obj,statValue),HX_HCSTRING("statValue","\xfd","\xaa","\x3b","\x95")},
	{hx::fsFloat,(int)offsetof(CharacterStat_obj,deltaOverTime),HX_HCSTRING("deltaOverTime","\x99","\x1f","\xc9","\xab")},
	{hx::fsObject /*::com::gamejam::character::StatBar*/ ,(int)offsetof(CharacterStat_obj,statBar),HX_HCSTRING("statBar","\x5f","\xa2","\x47","\x36")},
	{hx::fsObject /*::openfl::text::TextField*/ ,(int)offsetof(CharacterStat_obj,statNameText),HX_HCSTRING("statNameText","\x8c","\x80","\x94","\x82")},
	{hx::fsObject /*::openfl::text::TextField*/ ,(int)offsetof(CharacterStat_obj,statValueText),HX_HCSTRING("statValueText","\x4a","\x66","\x8c","\x51")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *CharacterStat_obj_sStaticStorageInfo = 0;
#endif

static ::String CharacterStat_obj_sMemberFields[] = {
	HX_HCSTRING("statName","\x3f","\xfc","\x54","\x50"),
	HX_HCSTRING("statValue","\xfd","\xaa","\x3b","\x95"),
	HX_HCSTRING("deltaOverTime","\x99","\x1f","\xc9","\xab"),
	HX_HCSTRING("statBar","\x5f","\xa2","\x47","\x36"),
	HX_HCSTRING("statNameText","\x8c","\x80","\x94","\x82"),
	HX_HCSTRING("statValueText","\x4a","\x66","\x8c","\x51"),
	HX_HCSTRING("updateStat","\x7d","\xce","\x10","\x05"),
	::String(null()) };

static void CharacterStat_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(CharacterStat_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void CharacterStat_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(CharacterStat_obj::__mClass,"__mClass");
};

#endif

hx::Class CharacterStat_obj::__mClass;

void CharacterStat_obj::__register()
{
	hx::Object *dummy = new CharacterStat_obj;
	CharacterStat_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("com.gamejam.character.CharacterStat","\x01","\x81","\x97","\xef");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = CharacterStat_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(CharacterStat_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< CharacterStat_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = CharacterStat_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = CharacterStat_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = CharacterStat_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace com
} // end namespace gamejam
} // end namespace character
