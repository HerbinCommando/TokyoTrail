// Generated by Haxe 3.4.2
#include <hxcpp.h>

#ifndef INCLUDED_com_gamejam_utils_TextButton
#include <com/gamejam/utils/TextButton.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObject
#include <openfl/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObjectContainer
#include <openfl/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_display_InteractiveObject
#include <openfl/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_openfl_display_SimpleButton
#include <openfl/display/SimpleButton.h>
#endif
#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_text_TextField
#include <openfl/text/TextField.h>
#endif
#ifndef INCLUDED_openfl_text_TextFormat
#include <openfl/text/TextFormat.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_da3b8a6fbd9c5018_16_new,"com.gamejam.utils.TextButton","new",0x1babfc85,"com.gamejam.utils.TextButton.new","com/gamejam/utils/TextButton.hx",16,0x2b468e28)
namespace com{
namespace gamejam{
namespace utils{

void TextButton_obj::__construct(::String buttonText,Float w,Float h){
            	HX_GC_STACKFRAME(&_hx_pos_da3b8a6fbd9c5018_16_new)
HXLINE(  18)		 ::openfl::text::TextFormat format =  ::openfl::text::TextFormat_obj::__alloc( HX_CTX ,null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null());
HXLINE(  19)		format->color = (int)8421504;
HXLINE(  20)		format->size = (int)48;
HXLINE(  22)		this->text =  ::openfl::text::TextField_obj::__alloc( HX_CTX );
HXLINE(  23)		this->text->setTextFormat(format,null(),null());
HXLINE(  24)		 ::openfl::text::TextField _hx_tmp = this->text;
HXDLIN(  24)		_hx_tmp->set_width((w - (int)20));
HXLINE(  25)		 ::openfl::text::TextField _hx_tmp1 = this->text;
HXDLIN(  25)		_hx_tmp1->set_height((h - (int)20));
HXLINE(  26)		this->text->set_text(buttonText);
HXLINE(  28)		this->bg =  ::openfl::display::Sprite_obj::__alloc( HX_CTX );
HXLINE(  29)		this->bg->set_width(w);
HXLINE(  30)		this->bg->set_height(h);
HXLINE(  31)		this->bg->addChild(this->text);
HXLINE(  32)		super::__construct(this->bg,this->bg,this->bg,this->bg);
            	}

Dynamic TextButton_obj::__CreateEmpty() { return new TextButton_obj; }

void *TextButton_obj::_hx_vtable = 0;

Dynamic TextButton_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< TextButton_obj > _hx_result = new TextButton_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2]);
	return _hx_result;
}

bool TextButton_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x3326e816) {
		if (inClassId<=(int)0x1b123bf8) {
			if (inClassId<=(int)0x19c29573) {
				return inClassId==(int)0x00000001 || inClassId==(int)0x19c29573;
			} else {
				return inClassId==(int)0x1b123bf8;
			}
		} else {
			return inClassId==(int)0x3326e816;
		}
	} else {
		return inClassId==(int)0x3f2b00af || inClassId==(int)0x7ec23ee9;
	}
}


hx::ObjectPtr< TextButton_obj > TextButton_obj::__new(::String buttonText,Float w,Float h) {
	hx::ObjectPtr< TextButton_obj > __this = new TextButton_obj();
	__this->__construct(buttonText,w,h);
	return __this;
}

hx::ObjectPtr< TextButton_obj > TextButton_obj::__alloc(hx::Ctx *_hx_ctx,::String buttonText,Float w,Float h) {
	TextButton_obj *__this = (TextButton_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(TextButton_obj), true, "com.gamejam.utils.TextButton"));
	*(void **)__this = TextButton_obj::_hx_vtable;
	__this->__construct(buttonText,w,h);
	return __this;
}

TextButton_obj::TextButton_obj()
{
}

void TextButton_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(TextButton);
	HX_MARK_MEMBER_NAME(bg,"bg");
	HX_MARK_MEMBER_NAME(text,"text");
	 ::openfl::display::SimpleButton_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void TextButton_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(bg,"bg");
	HX_VISIT_MEMBER_NAME(text,"text");
	 ::openfl::display::SimpleButton_obj::__Visit(HX_VISIT_ARG);
}

hx::Val TextButton_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"bg") ) { return hx::Val( bg ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"text") ) { return hx::Val( text ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val TextButton_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"bg") ) { bg=inValue.Cast<  ::openfl::display::Sprite >(); return inValue; }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"text") ) { text=inValue.Cast<  ::openfl::text::TextField >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void TextButton_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("bg","\xc5","\x55","\x00","\x00"));
	outFields->push(HX_HCSTRING("text","\xad","\xcc","\xf9","\x4c"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo TextButton_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*::openfl::display::Sprite*/ ,(int)offsetof(TextButton_obj,bg),HX_HCSTRING("bg","\xc5","\x55","\x00","\x00")},
	{hx::fsObject /*::openfl::text::TextField*/ ,(int)offsetof(TextButton_obj,text),HX_HCSTRING("text","\xad","\xcc","\xf9","\x4c")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *TextButton_obj_sStaticStorageInfo = 0;
#endif

static ::String TextButton_obj_sMemberFields[] = {
	HX_HCSTRING("bg","\xc5","\x55","\x00","\x00"),
	HX_HCSTRING("text","\xad","\xcc","\xf9","\x4c"),
	::String(null()) };

static void TextButton_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(TextButton_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void TextButton_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(TextButton_obj::__mClass,"__mClass");
};

#endif

hx::Class TextButton_obj::__mClass;

void TextButton_obj::__register()
{
	hx::Object *dummy = new TextButton_obj;
	TextButton_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("com.gamejam.utils.TextButton","\x13","\x56","\x70","\x9e");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = TextButton_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(TextButton_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< TextButton_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = TextButton_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = TextButton_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = TextButton_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace com
} // end namespace gamejam
} // end namespace utils
