// Generated by Haxe 3.4.2
#ifndef INCLUDED_com_gamejam_character_CharacterStat
#define INCLUDED_com_gamejam_character_CharacterStat

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
HX_DECLARE_CLASS3(com,gamejam,character,CharacterStat)
HX_DECLARE_CLASS3(com,gamejam,character,StatBar)
HX_DECLARE_CLASS2(openfl,display,DisplayObject)
HX_DECLARE_CLASS2(openfl,display,DisplayObjectContainer)
HX_DECLARE_CLASS2(openfl,display,IBitmapDrawable)
HX_DECLARE_CLASS2(openfl,display,InteractiveObject)
HX_DECLARE_CLASS2(openfl,display,Sprite)
HX_DECLARE_CLASS2(openfl,events,EventDispatcher)
HX_DECLARE_CLASS2(openfl,events,IEventDispatcher)
HX_DECLARE_CLASS2(openfl,text,TextField)

namespace com{
namespace gamejam{
namespace character{


class HXCPP_CLASS_ATTRIBUTES CharacterStat_obj : public  ::openfl::display::Sprite_obj
{
	public:
		typedef  ::openfl::display::Sprite_obj super;
		typedef CharacterStat_obj OBJ_;
		CharacterStat_obj();

	public:
		enum { _hx_ClassId = 0x1af01637 };

		void __construct(::String name,Float initialValue,Float rateOfChangeOverTime);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="com.gamejam.character.CharacterStat")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"com.gamejam.character.CharacterStat"); }
		static hx::ObjectPtr< CharacterStat_obj > __new(::String name,Float initialValue,Float rateOfChangeOverTime);
		static hx::ObjectPtr< CharacterStat_obj > __alloc(hx::Ctx *_hx_ctx,::String name,Float initialValue,Float rateOfChangeOverTime);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~CharacterStat_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("CharacterStat","\xfd","\xc3","\x38","\x8d"); }

		::String statName;
		Float statValue;
		Float deltaOverTime;
		 ::com::gamejam::character::StatBar statBar;
		 ::openfl::text::TextField statNameText;
		 ::openfl::text::TextField statValueText;
		void updateStat(Float dT);
		::Dynamic updateStat_dyn();

};

} // end namespace com
} // end namespace gamejam
} // end namespace character

#endif /* INCLUDED_com_gamejam_character_CharacterStat */ 
